name: BrightBoost CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Install Docker Compose
        run: |
          # Check if docker compose is already available
          if command -v docker-compose &> /dev/null; then
            echo "docker-compose found: $(docker-compose --version)"
          elif docker compose version &> /dev/null; then
            echo "docker compose found: $(docker compose version)"
          else
            echo "Installing Docker Compose standalone binary..."
            sudo curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "Docker Compose installed: $(docker-compose --version)"
          fi
      - name: Set up test database
        run: |
          docker compose -f docker-compose.test.yml up -d
          sleep 10
          npx prisma migrate deploy
        env:
          TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5433/brightboost_test
          
      - name: Run tests including database integration
        run: npm run test
        env:
          TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5433/brightboost_test
          JWT_SECRET: test-secret-key
          NODE_ENV: test
          
      - name: Teardown test database
        run: docker compose -f docker-compose.test.yml down
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # Note: App Service and Function App deployments have been removed
  # All frontend and API functions are now deployed through Azure Static Web Apps
  # See azure-static-web-apps-black-sand-053455d1e.yml for the deployment configuration
