# DEPRECATED: Azure Function App deployment - backend migrated to AWS Lambda
# This workflow is disabled as the backend now uses AWS Lambda instead of Azure Functions
# See aws-lambda-deploy.yml for current backend deployment

# name: Build and deploy Node.js project to Azure Function App - bb-dev-func-api

# DISABLED - Azure Function App deployment no longer used
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "api" # Deploy only the api folder
  NODE_VERSION: "18.x" # Use Node 18 as specified in requirements
  NEW_FUNCTION_APP_NAME: "bb-dev-func-api-v2" # New Function App for testing

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: "Resolve Project Dependencies Using Npm"
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          npx prisma generate
          npm run build --if-present
          npm run test --if-present
          popd

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B7B30058C40B49C4B90D3C083B38E7A6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A92E374E245D4441919032ED727312A6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F2F8796F20D94FDE8FE9CF70970F7CB7 }}

      - name: "Detect Function App SKU"
        id: detect-sku
        shell: bash
        run: |
          APP_DETAILS=$(az functionapp show --name bb-dev-func-api --resource-group $(az functionapp list --query "[?name=='bb-dev-func-api'].resourceGroup" -o tsv) --query "{sku: sku.name, kind: kind}" -o json)
          echo "Function App Details: $APP_DETAILS"

          SKU_NAME=$(echo $APP_DETAILS | jq -r '.sku // "Unknown"')
          KIND=$(echo $APP_DETAILS | jq -r '.kind // "Unknown"')

          echo "SKU: $SKU_NAME"
          echo "Kind: $KIND"

          if [[ "$SKU_NAME" == "FlexConsumption" ]] || [[ "$KIND" == *"flex"* ]]; then
            echo "is-flex=true" >> $GITHUB_OUTPUT
            echo "Detected Flex Consumption Function App - will use Azure CLI deployment"
          else
            echo "is-flex=false" >> $GITHUB_OUTPUT
            echo "Detected standard Function App - will use Azure Functions Action"
          fi

      - name: "Create Deployment Package for Flex"
        if: steps.detect-sku.outputs.is-flex == 'true'
        run: |
          cd ${{ github.workspace }}
          zip -r function-app-package.zip . -x "*.git*" ".github/*"
          echo "Created deployment package: function-app-package.zip"
          ls -la function-app-package.zip

      - name: "Deploy to Flex Consumption Function App"
        if: steps.detect-sku.outputs.is-flex == 'true'
        run: |
          az functionapp deployment source config-zip \
            --src function-app-package.zip \
            --name bb-dev-func-api \
            --resource-group $(az functionapp list --query "[?name=='bb-dev-func-api'].resourceGroup" -o tsv) \
            --timeout 600

          echo "Flex Consumption deployment completed"

      - name: "Deploy to Standard Function App"
        if: steps.detect-sku.outputs.is-flex == 'false'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: "bb-dev-func-api"
          slot-name: "Production"
          package: .

      - name: "Health Check After Deployment"
        shell: bash
        run: |
          echo "Running post-deployment health checks..."
          sleep 60
          
          # Test homepage
          echo "Testing Function App homepage..."
          HOMEPAGE_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://bb-dev-func-api.azurewebsites.net" || echo "000")
          echo "Homepage status: $HOMEPAGE_STATUS"
          
          # Test hello endpoint
          echo "Testing hello endpoint..."
          HELLO_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://bb-dev-func-api.azurewebsites.net/api/hello" || echo "000")
          echo "Hello endpoint status: $HELLO_STATUS"
          
          # Test signup endpoint
          echo "Testing signup endpoint..."
          SIGNUP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://bb-dev-func-api.azurewebsites.net/api/signup" \
            -H "Content-Type: application/json" \
            -d '{"name":"Test","email":"test@example.com","password":"test","role":"teacher"}' || echo "000")
          echo "Signup endpoint status: $SIGNUP_STATUS"
          
          echo "Health check complete"
          echo "Homepage: $HOMEPAGE_STATUS, Hello: $HELLO_STATUS, Signup: $SIGNUP_STATUS"
