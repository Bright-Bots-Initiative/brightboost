// DEPRECATED: This file has been replaced by api/_utils/swaAuth.js
// The custom JWT authentication has been replaced with Azure SWA built-in authentication
// This file is kept for reference only and should not be used

const jwt = require('jsonwebtoken');

const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key';

const verifyToken = async (context, req) => {
  try {
    const authHeader = req.headers.authorization;
    
    if (!authHeader || !authHeader.startsWith('Bearer ')) {
      return {
        isAuthorized: false,
        error: 'No valid authorization header provided'
      };
    }
    
    const token = authHeader.substring(7);
    
    const decoded = jwt.verify(token, JWT_SECRET);
    
    return {
      isAuthorized: true,
      user: {
        id: decoded.userId,
        email: decoded.email,
        name: decoded.name,
        role: decoded.role
      }
    };
  } catch (error) {
    context.log.error('Token verification failed:', error.message);
    return {
      isAuthorized: false,
      error: 'Invalid or expired token'
    };
  }
};

const generateToken = (user) => {
  const payload = {
    userId: user.id,
    email: user.email,
    name: user.name,
    role: user.role
  };
  
  return jwt.sign(payload, JWT_SECRET, { expiresIn: '24h' });
};

module.exports = {
  verifyToken,
  generateToken
};
